/* eslint-disable no-console */
import { drizzle } from 'drizzle-orm/libsql';
import { createClient } from '@libsql/client';
import * as schema from '../infrastructure/internal/db/schema';
import { ulid } from 'ulid';
import { readFileSync, readdirSync } from 'node:fs';
import { join } from 'node:path';

const {
  categoriesTable,
  productsTable,
  productVariantsTable,
  productImagesTable,
} = schema;

async function runMigrations(client: ReturnType<typeof createClient>) {
  console.log('üìã Running migrations...');
  
  const migrationsDir = join(process.cwd(), 'drizzle');
  const migrationFiles = readdirSync(migrationsDir)
    .filter(file => file.endsWith('.sql'))
    .sort();

  for (const file of migrationFiles) {
    console.log(`  Applying ${file}...`);
    const sql = readFileSync(join(migrationsDir, file), 'utf-8');
    
    // SQL„Éï„Ç°„Ç§„É´„ÇíË§áÊï∞„ÅÆ„Çπ„ÉÜ„Éº„Éà„É°„É≥„Éà„Å´ÂàÜÂâ≤„Åó„Å¶ÂÆüË°å
    const statements = sql
      .split(';')
      .map(s => s.trim())
      .filter(s => s.length > 0);
    
    for (const statement of statements) {
      await client.execute(statement);
    }
  }
  
  console.log('‚úÖ Migrations applied successfully');
}

async function seed() {
  // „É≠„Éº„Ç´„É´D1„Éá„Éº„Çø„Éô„Éº„Çπ„Å´Êé•Á∂ö
  const client = createClient({
    url: 'file:.wrangler/state/v3/d1/miniflare-D1DatabaseObject/4a472e75-3ca9-4cd0-a2d8-006f2a016a1d.sqlite',
  });

  const db = drizzle(client, { schema });

  console.log('üå± Seeding database...');

  try {
    // „Éû„Ç§„Ç∞„É¨„Éº„Ç∑„Éß„É≥„ÇíÂÆüË°å
    await runMigrations(client);
  } catch (error) {
    console.log('‚ö†Ô∏è  Migration error (might be already applied):', (error as Error).message);
  }

  try {
    // „Ç´„ÉÜ„Ç¥„É™„Éº„Çí‰ΩúÊàê
    console.log('Creating categories...');
    const categories = [
      { id: ulid(), name: '„Ç®„É¨„ÇØ„Éà„É≠„Éã„ÇØ„Çπ', parentId: null, displayOrder: 1 },
      { id: ulid(), name: '„Éï„Ç°„ÉÉ„Ç∑„Éß„É≥', parentId: null, displayOrder: 2 },
      { id: ulid(), name: 'Êú¨„ÉªÈõëË™å', parentId: null, displayOrder: 3 },
      { id: ulid(), name: '„Éõ„Éº„É†„Éª„Ç≠„ÉÉ„ÉÅ„É≥', parentId: null, displayOrder: 4 },
    ];

    await db.insert(categoriesTable).values(
      categories.map(cat => ({
        ...cat,
        createdAt: new Date(),
        updatedAt: new Date(),
      }))
    );
    console.log(`‚úÖ Created ${categories.length} categories`);

    // ÂïÜÂìÅ„Çí‰ΩúÊàê
    console.log('Creating products...');
    const products = [
      {
        id: ulid(),
        name: '„ÉØ„Ç§„É§„É¨„Çπ„Ç§„É§„Éõ„É≥ Pro',
        description: 'È´òÈü≥Ë≥™„ÅÆ„ÉØ„Ç§„É§„É¨„Çπ„Ç§„É§„Éõ„É≥„ÄÇ„Éé„Ç§„Ç∫„Ç≠„É£„É≥„Çª„É™„É≥„Ç∞Ê©üËÉΩ‰ªò„Åç„ÄÇ',
        categoryId: categories[0].id,
        status: 'published' as const,
      },
      {
        id: ulid(),
        name: '„Çπ„Éû„Éº„Éà„Ç¶„Ç©„ÉÉ„ÉÅ X5',
        description: 'ÂÅ•Â∫∑ÁÆ°ÁêÜ„Å®„Éï„Ç£„ÉÉ„Éà„Éç„Çπ„Éà„É©„ÉÉ„Ç≠„É≥„Ç∞„Å´ÊúÄÈÅ©„Å™„Çπ„Éû„Éº„Éà„Ç¶„Ç©„ÉÉ„ÉÅ„ÄÇ',
        categoryId: categories[0].id,
        status: 'published' as const,
      },
      {
        id: ulid(),
        name: '„Ç´„Ç∏„É•„Ç¢„É´T„Ç∑„É£„ÉÑ',
        description: 'Âø´ÈÅ©„Å™ÁùÄÂøÉÂú∞„ÅÆÂÆöÁï™T„Ç∑„É£„ÉÑ„ÄÇÊßò„ÄÖ„Å™„Ç´„É©„Éº„Éê„É™„Ç®„Éº„Ç∑„Éß„É≥„ÄÇ',
        categoryId: categories[1].id,
        status: 'published' as const,
      },
      {
        id: ulid(),
        name: '„Éá„Éã„É†„Éë„É≥„ÉÑ',
        description: '„Çπ„Çø„Ç§„É™„ÉÉ„Ç∑„É•„Å™„Éá„Éã„É†„Éë„É≥„ÉÑ„ÄÇ„Å©„Çì„Å™„Ç∑„Éº„É≥„Å´„ÇÇÂêà„Çè„Åõ„ÇÑ„Åô„ÅÑ„ÄÇ',
        categoryId: categories[1].id,
        status: 'published' as const,
      },
      {
        id: ulid(),
        name: '„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ÂÖ•ÈñÄÊõ∏',
        description: 'ÂàùÂøÉËÄÖÂêë„Åë„ÅÆ„Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞Â≠¶ÁøíÊú¨„ÄÇÂÆüË∑µÁöÑ„Å™ÂÜÖÂÆπ„ÅåÂÖÖÂÆü„ÄÇ',
        categoryId: categories[2].id,
        status: 'published' as const,
      },
    ];

    await db.insert(productsTable).values(
      products.map(prod => ({
        ...prod,
        createdAt: new Date(),
        updatedAt: new Date(),
      }))
    );
    console.log(`‚úÖ Created ${products.length} products`);

    // ÂïÜÂìÅ„Éê„É™„Ç¢„É≥„Éà„Çí‰ΩúÊàê
    console.log('Creating product variants...');
    const variants = [
      // „ÉØ„Ç§„É§„É¨„Çπ„Ç§„É§„Éõ„É≥
      { id: ulid(), productId: products[0].id, sku: 'WEP-BLK-001', price: 15800, stockQuantity: 50, size: null, color: '„Éñ„É©„ÉÉ„ÇØ', displayOrder: 1 },
      { id: ulid(), productId: products[0].id, sku: 'WEP-WHT-001', price: 15800, stockQuantity: 30, size: null, color: '„Éõ„ÉØ„Ç§„Éà', displayOrder: 2 },
      
      // „Çπ„Éû„Éº„Éà„Ç¶„Ç©„ÉÉ„ÉÅ
      { id: ulid(), productId: products[1].id, sku: 'SWX5-BLK-001', price: 32000, stockQuantity: 20, size: null, color: '„Éñ„É©„ÉÉ„ÇØ', displayOrder: 1 },
      { id: ulid(), productId: products[1].id, sku: 'SWX5-SLV-001', price: 32000, stockQuantity: 15, size: null, color: '„Ç∑„É´„Éê„Éº', displayOrder: 2 },
      
      // T„Ç∑„É£„ÉÑ
      { id: ulid(), productId: products[2].id, sku: 'TSH-BLK-S', price: 2980, stockQuantity: 100, size: 'S', color: '„Éñ„É©„ÉÉ„ÇØ', displayOrder: 1 },
      { id: ulid(), productId: products[2].id, sku: 'TSH-BLK-M', price: 2980, stockQuantity: 150, size: 'M', color: '„Éñ„É©„ÉÉ„ÇØ', displayOrder: 2 },
      { id: ulid(), productId: products[2].id, sku: 'TSH-BLK-L', price: 2980, stockQuantity: 120, size: 'L', color: '„Éñ„É©„ÉÉ„ÇØ', displayOrder: 3 },
      { id: ulid(), productId: products[2].id, sku: 'TSH-WHT-M', price: 2980, stockQuantity: 80, size: 'M', color: '„Éõ„ÉØ„Ç§„Éà', displayOrder: 4 },
      
      // „Éá„Éã„É†„Éë„É≥„ÉÑ
      { id: ulid(), productId: products[3].id, sku: 'DEN-BLU-28', price: 8900, stockQuantity: 40, size: '28', color: '„Éñ„É´„Éº', displayOrder: 1 },
      { id: ulid(), productId: products[3].id, sku: 'DEN-BLU-30', price: 8900, stockQuantity: 60, size: '30', color: '„Éñ„É´„Éº', displayOrder: 2 },
      { id: ulid(), productId: products[3].id, sku: 'DEN-BLU-32', price: 8900, stockQuantity: 50, size: '32', color: '„Éñ„É´„Éº', displayOrder: 3 },
      
      // „Éó„É≠„Ç∞„É©„Éü„É≥„Ç∞ÂÖ•ÈñÄÊõ∏
      { id: ulid(), productId: products[4].id, sku: 'BOOK-PROG-001', price: 3200, stockQuantity: 200, size: null, color: null, displayOrder: 1 },
    ];

    await db.insert(productVariantsTable).values(
      variants.map(variant => ({
        ...variant,
        createdAt: new Date(),
        updatedAt: new Date(),
      }))
    );
    console.log(`‚úÖ Created ${variants.length} product variants`);

    // ÂïÜÂìÅÁîªÂÉè„Çí‰ΩúÊàêÔºà„ÉÄ„Éü„ÉºURLÔºâ
    console.log('Creating product images...');
    const images = [
      { id: ulid(), productId: products[0].id, productVariantId: null, imageUrl: 'https://placehold.co/600x400/000000/FFFFFF/png?text=Wireless+Earphones', displayOrder: 1 },
      { id: ulid(), productId: products[1].id, productVariantId: null, imageUrl: 'https://placehold.co/600x400/1E3A8A/FFFFFF/png?text=Smart+Watch', displayOrder: 1 },
      { id: ulid(), productId: products[2].id, productVariantId: null, imageUrl: 'https://placehold.co/600x400/DC2626/FFFFFF/png?text=T-Shirt', displayOrder: 1 },
      { id: ulid(), productId: products[3].id, productVariantId: null, imageUrl: 'https://placehold.co/600x400/2563EB/FFFFFF/png?text=Denim+Pants', displayOrder: 1 },
      { id: ulid(), productId: products[4].id, productVariantId: null, imageUrl: 'https://placehold.co/600x400/059669/FFFFFF/png?text=Programming+Book', displayOrder: 1 },
    ];

    await db.insert(productImagesTable).values(
      images.map(img => ({
        ...img,
        createdAt: new Date(),
      }))
    );
    console.log(`‚úÖ Created ${images.length} product images`);

    console.log('‚úÖ Database seeded successfully!');
  } catch (error) {
    console.error('‚ùå Error seeding database:', error);
    throw error;
  } finally {
    client.close();
  }
}

seed();
